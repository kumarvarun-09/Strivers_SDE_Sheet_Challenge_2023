/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     // Write your code here.
     if(!head->next || !k)
     {
          return head;
     }
     Node* temp = head;
     int n = 1;
     while(temp->next)
     {
          n++;
          temp = temp->next;
     }
     k %= n;
     if(k)
     {
          k = (n - k);
     }
     Node* prev = NULL, *curr = head;
     while(k--)
     {
          prev = curr;
          curr = curr->next;
     }
     if (prev) 
     {
          temp->next = head;
          prev->next = NULL;
     }
     return curr;
     
}
